@model MyEPA.ViewModels.MutualSupportViewModel
@using MyEPA.Enums;
@{
    ViewBag.Title = "縣市相互支援協定-修改";
    Layout = "~/Views/_Layout.cshtml";
    var supportTypes = (Dictionary<int, string>)ViewBag.SupportTypes;
}
<link rel="stylesheet" href="~/Content/flatpickr.css">
<link rel="stylesheet" href="~/Content/confirmDate.css">
<h2>支援協議</h2>

@using (Html.BeginForm("Edit", "MutualSupport", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <input type="hidden" name="ResourceTypeId" value="@Model.ResourceTypeId">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.AcceptSection, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AcceptSection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AcceptSection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Section, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in supportTypes)
                {
                    <input type="radio" id="@item.Key" name="SupportType" value="@item.Key" @(Model.SupportType == item.Key ? "checked" : "") />
                    <label for="@item.Key"> @item.Value</label>
                }
                @Html.ValidationMessageFor(model => model.SupportType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupportContent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupportContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">檔案</label>

            <div class="col-md-10">
                @if (Model.FileData != null)
                {
                    @Html.ActionLink(Model.FileData.UserFileName, "Download", "FileData", new { id = Model.FileData.Id }, new { })
                }
                <div class="form-group">
                    <label for="file">File:</label>
                    <div class="col-md-10">
                        <input type="file" name="file" id="file" />
                    </div>
                </div>
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="修改" class="btn btn-success" />
                @Html.ActionLink("取消", "Index", new { type = Model.ResourceTypeId }, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}
<script src="~/Scripts/confirmDate.js"></script>
<script src="~/Scripts/flatpickr.js"></script>