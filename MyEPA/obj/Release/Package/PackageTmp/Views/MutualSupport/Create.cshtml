@model MyEPA.Models.MutualSupportModel
@using MyEPA.Enums;
@{
    ViewBag.Title = "縣市相互支援協定-新增";
    Layout = "~/Views/_Layout.cshtml";
    var type = Request.QueryString["type"];
    var supportTypes = (Dictionary<int, string>)ViewBag.SupportTypes;
}
<link rel="stylesheet" href="~/Content/flatpickr.css">
<link rel="stylesheet" href="~/Content/confirmDate.css">

<h2>新增支援協議</h2>

@using (Html.BeginForm("Create", "MutualSupport", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <input type="hidden" name="ResourceTypeId" value="@type">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.AcceptSection, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AcceptSection, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.AcceptSection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Section, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input", @required = "required" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input", @required = "required" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in supportTypes)
                {
                    <input type="radio" id="@item.Key" name="SupportType" value="@item.Key" @(Model.SupportType == item.Key ? "checked": "") />
                    <label for="@item.Key"> @item.Value</label>
                }

                @Html.ValidationMessageFor(model => model.SupportType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.SupportContent, new { @class = "form-control  rows=5" })
                @Html.ValidationMessageFor(model => model.SupportContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Memo, new { @class = "form-control  rows=5" })
                @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label for="file" class="control-label col-md-2">File:</label>
            <div class="col-md-10">
                <input type="file" name="file" id="file" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="建立" class="btn btn-success" />
                @Html.ActionLink("取消", "Index", new { }, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}
<script src="~/Scripts/confirmDate.js"></script>
<script src="~/Scripts/flatpickr.js"></script>