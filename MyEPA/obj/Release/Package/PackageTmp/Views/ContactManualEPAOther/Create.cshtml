@model MyEPA.ViewModels.ContactManualEPAViewModel

@{
    ViewBag.Title = Model.Type.GetDescription() + " - 新增";
    Layout = "~/Views/_ContactManualLayout.cshtml";
    IEnumerable<SelectListItem> contactManualTypes = ViewBag.ContactManualTypes;
}
<style>
    .RowHeight {
        line-height: 20px;
        padding: 3px;
    }

    .SetIn {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .select2-container--bootstrap .select2-selection--single {
        padding: 9px 24px 6px 12px !important;
    }
</style>

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h3>@ViewBag.Title</h3>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        Html.RenderAction("GetTypeSelectListItem", "ContactManualEPAOther", new { type = Model.Type.ToInteger() });
                    }
                </div>
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div id="userlist" class="col-md-10">
                    @{
                        Html.RenderAction("GetSelectListItem", "UserEPA", new { });
                    }
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sort, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("取消", "Index", new { type = Model.Type }, new { @class = "btn btn-default" })
                    <input type="submit" value="新增" class="btn btn-success" />

                </div>
            </div>
        </div>
    }
</div>
@section scripts{
    <script>
        $(document).ready(function () {
            getUser();
            $("#type").change(function () {
                getUser();
            });
            function getUser() {
                var depa = $('#type option:selected').closest('optgroup').attr('label');
                var userlist = $("#userlist");
                $.ajax({
                        url: '@Url.Action("GetSelectListItem", "UserEPA")',
                        type: 'GET',
                        data: {
                            SearchDepartmentName: depa
                        },
                        success: function (respones) {
                            userlist.html(respones)
                        }
                    });
            }
        });

    </script>
}