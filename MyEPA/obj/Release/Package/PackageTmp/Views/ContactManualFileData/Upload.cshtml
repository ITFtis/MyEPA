@model MyEPA.ViewModels.ContactManualFileDataUploadViewModel

@{
    if (string.IsNullOrEmpty(Model.UserFileName))
    {
        ViewBag.Title = Model.SourceType.GetDescription() + " - 檔案上傳";
    }
    else
    {
        ViewBag.Title = Model.SourceType.GetDescription() + " - 修改";
    }

    Layout = "~/Views/_ContactManualLayout.cshtml";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("Upload", "ContactManualFileData", new { }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(e => e.SourceType)
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    Html.RenderAction("GetSelectListItem", "ContactManualDepartment", new { id = Model.DepartmentId });
                }
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">檔案上傳</label>
            <div class="col-md-10">
                <input accept=".docx" type="file" name="file"><br>
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                @if (string.IsNullOrWhiteSpace(Model.UserFileName) == false)
                {
                    @:檔案下載: @Html.ActionLink(Model.UserFileName, "Download", "FileData", new { id = Model.Id }, new { })
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("取消", "Index", new { SourceType = Model.SourceType }, new { @class = "btn btn-default" })
                <input type="submit" value="儲存" class="btn btn-success" />
            </div>
        </div>
    </div>
}