@model MyEPA.Models.Meeting_SignModel

@{
    ViewBag.Title = "修改課程";
    Layout = "~/Views/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(e => e.Meeting_ID)
    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Meeting_name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.Meeting_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Datetime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="Meeting_Datetime" id="Meeting_Datetime" type="datetime-local" value="@Model.Meeting_Datetime.ToString("yyyy-MM-ddTHH:mm")">
            @Html.ValidationMessageFor(model => model.Meeting_Datetime, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MaximumAttendance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaximumAttendance, new { htmlAttributes = new { @class = "form-control", @Type = "number" } })
            @Html.ValidationMessageFor(model => model.Meeting_Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Meeting_Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Meeting_Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Issue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea name="Meeting_Issue" id="Meeting_Issue" class="form-control">@Model.Meeting_Issue</textarea>
            @Html.ValidationMessageFor(model => model.Meeting_Issue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Memo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Meeting_Memo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Meeting_Memo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Sign_BeginTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="Meeting_Sign_BeginTime" id="Meeting_Sign_BeginTime" type="datetime-local" value="@(Model.Meeting_Sign_BeginTime.HasValue ? Model.Meeting_Sign_BeginTime.Value.ToString("yyyy-MM-ddTHH:mm") : null)">
            @Html.ValidationMessageFor(model => model.Meeting_Sign_BeginTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Sign_EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="Meeting_Sign_EndTime" id="Meeting_Sign_EndTime" type="datetime-local" value="@(Model.Meeting_Sign_EndTime.HasValue ? Model.Meeting_Sign_EndTime.Value.ToString("yyyy-MM-ddTHH:mm") : null)">
            @Html.ValidationMessageFor(model => model.Meeting_Sign_EndTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Food, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="Meeting_Food" id="Meeting_Food">
                <option value="無" @(Model.Meeting_Food == "無" ? "selected" : "")>無</option>
                <option value="有" @(Model.Meeting_Food == "有" ? "selected" : "")>有</option>
            </select>
            @Html.ValidationMessageFor(model => model.Meeting_Food, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Food_Begin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="Meeting_Food_Begin" id="Meeting_Food_Begin" type="datetime-local" value="@(Model.Meeting_Food_Begin.HasValue ? Model.Meeting_Food_Begin.Value.ToString("yyyy-MM-ddTHH:mm") : null)">
            @Html.ValidationMessageFor(model => model.Meeting_Food_Begin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Food_End, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="Meeting_Food_End" id="Meeting_Food_End" type="datetime-local" value="@(Model.Meeting_Food_End.HasValue ? Model.Meeting_Food_End.Value.ToString("yyyy-MM-ddTHH:mm") : null)">
            @Html.ValidationMessageFor(model => model.Meeting_Food_End, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meeting_Traffic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="Meeting_Traffic" id="Meeting_Traffic">
                <option value="0" @(Model.Meeting_Traffic == 0 ? "selected" : "")>無</option>
                <option value="1" @(Model.Meeting_Traffic == 1 ? "selected" : "")>有</option>
            </select>
            @Html.ValidationMessageFor(model => model.Meeting_Traffic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="儲存" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("返回列表", "Index", new { }, new { @class = "btn" })
</div>
