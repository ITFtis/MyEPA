@model MyEPA.Models.UserEditViewModel

@{
    string title = "聯絡人資料維護";

    if(Model == null)
    {
        title += " - 新增";
    }
    else
    {
        title += " - 修改";
    }
    ViewBag.Title = title;
    Layout = "~/Views/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>@ViewBag.Title</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pwd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pwd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DutyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    Html.RenderAction("GetSelectListItem", "Duty", new { selectItem = Model == null ? null : (int?)Model.DutyId });
                }
                @Html.ValidationMessageFor(model => model.DutyId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="citylist" class="col-md-10">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TownId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="townlist" class="col-md-10">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobilePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MainContacter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MainContacter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MainContacter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReportPriority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReportPriority, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReportPriority, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PositionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PositionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OfficePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OfficePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OfficePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FaxNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FaxNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FaxNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomeNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HomeNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HomeNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section scripts{
    <script>
        $(document).ready(function () {
            getCitys();
            $("#DutyId").change(function () {
                getCitys();
            });
            function getCitys() {
                var source = $("#DutyId");
                var selectedValue = source.val();
                var datalist = $("#citylist");
                console.log(selectedValue);
                if (selectedValue?.length > 0) {
                    $.ajax({
                        url: `@Url.Action("GetSelectListItem", "City")`,
                        type: 'GET',
                        data: {
                            id: `@(Model == null ? null : Model.CityId)`,
                            duty: selectedValue
                        },
                        success: function (respones) {
                            datalist.html(respones);
                            getTowns();
                            $("#CityId").change(function () {
                                getTowns();
                            });
                        }
                    });
                }
                else {
                    datalist.empty();
                }
            }
            function getTowns() {
                var source = $("#CityId");
                var selectedValue = source.val();
                var datalist = $("#townlist");

                var isTown = false;
                switch ($("#DutyId").val()) {
                    case "1":
                        isTown = true;
                        break;
                    case "2":
                        isTown = false;
                        break;
                    default:
                        isTown = "";
                        break;
                }
                if (selectedValue?.length > 0) {
                    $.ajax({
                        url: `@Url.Action("GetSelectListItem", "Town")`,
                        type: 'GET',
                        data: {
                            id: `@(Model == null ? null : Model.TownId)`,
                            cityId: selectedValue,
                            isTown: isTown
                        },
                        success: function (respones) {
                            datalist.html(respones);
                        }
                    });
                }
                else {
                    datalist.empty();
                }
            }
        });
    </script>
}