@model MyEPA.ViewModels.OpenContractViewModel
@using MyEPA.Models;

@{
    ViewBag.Title = "開口合約-修改";
    Layout = "~/Views/_Layout.cshtml";

    List<ResourceTypeModel> types = ViewBag.Types;
    UserBriefModel user = ViewBag.User;

    int copyIdNew = ViewBag.CopyIdNew == null ? 0 : int.Parse(ViewBag.CopyIdNew.ToString());
    if (copyIdNew > 0)
    {
        <script>
        alert('合約複製成功');
        location.href = '@Url.Action("Index", "OpenContract")';
        </script>
    }
}
<link rel="stylesheet" href="~/Content/flatpickr.css">
<link rel="stylesheet" href="~/Content/confirmDate.css">
<h2>修改開口合約</h2>

@if (Model != null)
{
    using (Html.BeginForm("Edit", "OpenContractNew", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    合約種類
                </label>
                <div class="col-md-10">
                    <select id="ResourceTypeId" name="ResourceTypeId">
                        @foreach (var item in types)
                        {
                            string selected = @item.Id == Model.ResourceTypeId ? "selected" : "";
                            <option value="@item.Id" @selected>@item.Name</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    合約名稱
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    簽約日期
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.KeyInDate, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.KeyInDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    合約起始
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OContractDateBegin, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.OContractDateBegin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    合約截止
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OContractDateEnd, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.OContractDateEnd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    合約廠商
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fac, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Fac, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    負責人
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    聯絡電話
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TEL, new { htmlAttributes = new { @class = "form-control", @pattern = RegexUtility.TEL, @required = "required" } })
                    @Html.ValidationMessageFor(model => model.TEL, "", new { @class = "text-danger" })
                    EX.012-34567890#12345
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    行動電話
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MobileTEL, new { htmlAttributes = new { @class = "form-control", @pattern = RegexUtility.Mobile, @required = "required" } })
                    @Html.ValidationMessageFor(model => model.MobileTEL, "", new { @class = "text-danger" })
                    EX.0912-345678
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsSupportCity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IsSupportCity", new List<SelectListItem>
                    {
                        new SelectListItem{Text = "否", Value = "false"},
                        new SelectListItem{Text = "是", Value = "true"},
                    })
                </div>

            </div>

            <div class="form-group">
                <label class="control-label col-md-2">
                    <span class="text-danger">*</span>
                    檔案
                </label>
                <div class="col-md-10">
                    @if (Model.FileData != null)
                    {
                        <a href="@Url.Action("Download", "FileData", new { id = Model.FileData.Id })">@Model.FileData.UserFileName</a>
                    }
                    <input type="file" name="file" id="file" accept=".png, .pdf, .jpg, .jpeg, .docx, .mp4" />
                    <span class="text-primary mt-2">限定(.png, .pdf, .jpg, .jpeg, .docx, .mp4)</span>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @{
                        if (ViewBag.CanEdit)
                        {
                            <input type="submit" value="修改" class="btn btn-danger" />
                        }
                    }

                    @Html.ActionLink("取消", "Index", null, new { @class = "btn btn-success" })
                    <button class="btn btn-success" name="submitButton" type="submit" value="Copy">複製合約</button>
                </div>
            </div>
        </div>
    }
}
<script src="~/Scripts/confirmDate.js"></script>
<script src="~/Scripts/flatpickr.js"></script>
