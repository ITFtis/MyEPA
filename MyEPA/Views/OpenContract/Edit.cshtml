@model MyEPA.ViewModels.OpenContractViewModel

@{
    ViewBag.Title = "開口合約-修改";
    Layout = "~/Views/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/flatpickr.css">
<link rel="stylesheet" href="~/Content/confirmDate.css">
<h2>修改開口合約</h2>
@using (Html.BeginForm("Edit", "OpenContract", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    <input type="hidden" name="ResourceTypeId" value="@Model.ResourceTypeId">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.KeyInDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KeyInDate, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input", @required = "required" } })
            @Html.ValidationMessageFor(model => model.KeyInDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OContractDateBegin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OContractDateBegin, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input", @required = "required" } })
            @Html.ValidationMessageFor(model => model.OContractDateBegin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OContractDateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OContractDateEnd, new { htmlAttributes = new { @class = "form-control flatpickr flatpickr-input", @required = "required" } })
            @Html.ValidationMessageFor(model => model.OContractDateEnd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fac, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fac, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.Fac, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TEL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TEL, new { htmlAttributes = new { @class = "form-control", @pattern = RegexUtility.TEL, @required = "required" } })
            @Html.ValidationMessageFor(model => model.TEL, "", new { @class = "text-danger" })
            EX.012-34567890#12345
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MobileTEL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MobileTEL, new { htmlAttributes = new { @class = "form-control", @pattern = RegexUtility.Mobile, @required = "required" } })
            @Html.ValidationMessageFor(model => model.MobileTEL, "", new { @class = "text-danger" })
            EX.0912-345678
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsSupportCity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IsSupportCity", new List<SelectListItem>
            {
                new SelectListItem{Text = "否", Value = "false"},
                new SelectListItem{Text = "是", Value = "true"},               
            })
        </div>

    </div>

    <div class="form-group">
        <label class="control-label col-md-2">檔案</label>
        <div class="col-md-10">
            @if (Model.FileData != null)
            {
                <a href="@Url.Action("Download", "FileData", new { id = Model.FileData.Id })">@Model.FileData.UserFileName</a>
            }
            <input type="file" name="file" id="file" />
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="修改" class="btn btn-success" />
            @Html.ActionLink("取消", "Index", new { type = Model.ResourceTypeId }, new { @class = "btn btn-success" })
        </div>
    </div>
</div>
}
<script src="~/Scripts/confirmDate.js"></script>
<script src="~/Scripts/flatpickr.js"></script>
