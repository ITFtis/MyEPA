@{
    Layout = "~/Views/_Layout.cshtml";
}

@*以下頁面的子網頁(PickNoticeToRemove, ShowPost會
    利用Entity Framework產生公告的GridView
    所以必須引入NoriceModel*@

@using MyEPA.Models
@model NoticeModel
<br />

@*顯示公告的上方，有公告事項與新聞消息的兩個項目
    讓用戶可點選轉換，目前是在公告事項的項目
    所以公告事項設為btn-primary以呈現藍色，而新聞消息呈現灰色*@

@*公告與新聞按鈕的右方有個ViewBag.Msg，
    會呈現對公告新增刪除等運作後的成功或失敗結果*@

@Html.ActionLink("公告事項", "A9x7Notice", "EPAxPost", null, new { @class = "btn btn-primary btn-large" })
@Html.ActionLink("新聞消息", "A9x7News", "EPAxPost", null, new { @class = "btn btn-large" })
<br /><br />

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active" data-toggle="tab" href="#ShowNotice">顯示公告</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-toggle="tab" href="#AddNotice">新增公告</a>
    </li>
    <li class="nav-item">
        @Html.ActionLink("刪除公告", "PickNoticeToRemove", "EPAxPost", "", new { @class = "nav-link" })
    </li>
</ul>

<div class="tab-content">
    <div id="ShowNotice" class="tab-pane fade in show active">
        @{Html.RenderPartial("~/Views/Components/ShowPost.cshtml");}
    </div>

    @*在按下確定發佈後，填寫的標題與內容，
        會存入Topic與Content的ID變數中
        由EPAxPost/StoreNotice讀取並利用去新增資料*@

    <div id="AddNotice" class="tab-pane">
        @using (Html.BeginForm("StoreNotice", "EPAxPost"))
        {
            <div style="background-color:lightyellow;width:50%;margin:10px">
                <label>標題:&nbsp</label>
                @Html.TextBox("Topic", "", new { @class = "input100" })
                <br />
                <label>內容:&nbsp</label>
                @Html.TextBox("Content", "", new { @class = "input100" })
            </div>
            <input type="submit" class="btn btn-info" style="margin:10px" value="確定發布" />
        }
    </div>

</div>



