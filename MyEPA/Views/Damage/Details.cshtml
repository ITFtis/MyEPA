@model MyEPA.ViewModels.DamageViewModel
@using MyEPA.Models

@{
    Layout = "~/Views/_Layout.cshtml";
    //垃圾場
    List<SelectListItem> landfills = ViewBag.Landfills;
    //焚化廠
    List<SelectListItem> incinerators = ViewBag.Incinerators;

    //災情通報
    List<FileDataModel> files = ViewBag.Files;
    List<FileDataModel> images = ViewBag.Images;

    //環境清理通報
    List<FileDataModel> ccfiles = ViewBag.CCFiles;
    List<FileDataModel> ccimages = ViewBag.CCImages;

    //querystring
    int hType = Request.QueryString["hType"] == null ? 1 : int.Parse(Request.QueryString["hType"]);

    if (hType == 2)
    {
        ViewBag.Title = "環境清理通報 - 檢視";
    }
    else
    {
        ViewBag.Title = "災情通報 - 檢視";
    }

}

<h3>@ViewBag.Title</h3>

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    @if (hType == 1)
    {

        <div class="form-group">
            @Html.LabelFor(model => model.DiasterName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiasterName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.DiasterName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReportDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control text-box single-line" readonly="readonly" data-val="true" id="ReportDay" name="ReportDay" type="date" value="@(Model.ReportDay != null ? ((DateTime)Model.ReportDay).ToString("yyyy-MM-dd") : "")">
                @Html.ValidationMessageFor(model => model.ReportDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TownName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TownName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.TownId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DamagePlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DamagePlace, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.DamagePlace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DumpSiteDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DumpSiteDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.DumpSiteDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LandfillIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (int i = 0; i < landfills.Count; i++)
                {
                    var item = landfills[i];

                    <input disabled="disabled" id="InputLandfillIds[@i]" name="InputLandfillIds[@i]" @(Model.InputLandfillIds.Select(e => e.ToString()).Contains(item.Value) ? "checked=\"checked\"" : string.Empty) value="@item.Value" type="checkbox" />
                    <label for="InputLandfillIds[@i]">@item.Text</label>
                    <br />
                }
                @Html.ValidationMessageFor(model => model.LandfillIds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncinerationPlantDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IncinerationPlantDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.IncinerationPlantDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncineratorIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (int i = 0; i < incinerators.Count; i++)
                {
                    var item = incinerators[i];

                    <input disabled="disabled" id="InputIncineratorIds[@i]" name=" [@i]" @(Model.InputIncineratorIds.Select(e => e.ToString()).Contains(item.Value) ? "checked=\"checked\"" : string.Empty) value="@item.Value" type="checkbox" />
                    <label for="InputIncineratorIds[@i]">@item.Text</label>
                    <br />
                }
                @Html.ValidationMessageFor(model => model.IncineratorIds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Other, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--
        <div class="form-group">
            @Html.LabelFor(model => model.DamageArea, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DamageArea, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.DamageArea, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FloodArea, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FloodArea, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.FloodArea, "", new { @class = "text-danger" })
            </div>
        </div>
        -->
        <!--災情通報-->
        <div class="form-group">
            <div class="control-label col-md-2">
                照片(災情通報)
            </div>
            <div class="col-md-10">
                @if (Model.ImageFile != null)
                {
                    <img src="@Url.Action("Download", "FileData", new { id = Model.ImageFile.Id })" alt="download" />

                }
                @foreach (var item in images)
                {
                    <a target="_blank" href="@Url.Action("Download", "FileData", new { id = item.Id })">
                        <img width="200" src="@Url.Action("Download", "FileData", new { id = item.Id })" />
                    </a>

                }
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                檔案(災情通報)
            </div>
            <div class="col-md-10">

                <ul>
                    @if (Model.File != null)
                    {
                        <li>
                            @Html.ActionLink(Model.File.UserFileName, "Download", "FileData", new { id = Model.File.Id }, new { })
                        </li>
                    }
                    @foreach (var item in files)
                    {

                        <li>
                            @Html.ActionLink(item.UserFileName, "Download", "FileData", new { id = item.Id }, new { })
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
    else if (hType == 2)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.DisinfectDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <input class="form-control text-box single-line" readonly="readonly" data-val="true" id="DisinfectDate" name="DisinfectDate" type="date" value="@(Model.DisinfectDate != null ? ((DateTime)Model.DisinfectDate).ToString("yyyy-MM-dd") : "")">
                @Html.ValidationMessageFor(model => model.DisinfectDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisinfectArea, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.DisinfectArea, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.DisinfectArea, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CLE_MUD, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CLE_MUD, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CLE_MUD, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CLE_Garbage, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CLE_Garbage, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CLE_Garbage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CleaningMemberQuantity, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CleaningMemberQuantity, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CleaningMemberQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NationalArmyQuantity, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NationalArmyQuantity, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.NationalArmyQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CLE_DisinfectorL, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CLE_DisinfectorL, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CLE_DisinfectorL, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CLE_DisinfectorW, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CLE_DisinfectorW, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CLE_DisinfectorW, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CLE_EquipmentNum, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CLE_EquipmentNum, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CLE_EquipmentNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3" for="CLE_EquipmentDesc">機具明細(如噴霧機3台)</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.CLE_EquipmentDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CLE_EquipmentDesc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CLE_CarNum, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CLE_CarNum, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CLE_CarNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3" for="CLE_CarDesc">車輛明細(如垃圾車2輛)</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.CLE_CarDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.CLE_CarDesc, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--環境清理通報-->
        <div class="form-group">
            <div class="control-label col-md-3">
                圖片(環境清理)
            </div>
            <div class="col-md-9">
                @if (Model.CCImageFile != null)
                {
                    <img src="@Url.Action("Download", "FileData", new { id = Model.CCImageFile.Id })" alt="download" />

                }
                @foreach (var item in ccimages)
                {
                    <a target="_blank" href="@Url.Action("Download", "FileData", new { id = item.Id })">
                        <img width="200" src="@Url.Action("Download", "FileData", new { id = item.Id })" />
                    </a>

                }
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-3">
                檔案(環境清理)
            </div>
            <div class="col-md-9">

                <ul>
                    @if (Model.CCFile != null)
                    {
                        <li>
                            @Html.ActionLink(Model.CCFile.UserFileName, "Download", "FileData", new { id = Model.CCFile.Id }, new { })
                        </li>
                    }
                    @foreach (var item in ccfiles)
                    {

                        <li>
                            @Html.ActionLink(item.UserFileName, "Download", "FileData", new { id = item.Id }, new { })
                        </li>
                    }
                </ul>
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-6">
            @{
                if (hType == 2)
                {
                    //環境清理
                    <a href="@Url.Action("B1cc18", "EPBxDamage")?diasterId=@Model.DiasterId&cleanDay=@(Model.CleanDay != null ? ((DateTime)Model.CleanDay).ToString("yyyy-MM-dd") : "")">
                        <div class="btn align-center">返回</div>
                    </a>
                }
                else
                {
                    //災情通報
                    <a href="@Url.Action("B1c18", "EPBxDamage")?diasterId=@Model.DiasterId&reportDay=@(Model.ReportDay != null ? ((DateTime)Model.ReportDay).ToString("yyyy-MM-dd") : "")">
                        <div class="btn align-center">返回</div>
                    </a>
                }

            }
        </div>
    </div>
</div>
