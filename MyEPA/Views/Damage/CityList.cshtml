@model IEnumerable<MyEPA.Models.DamageTownViewModel>

@using MyEPA.Enums;

@{
    ViewBag.Title = "災情通報 - 縣市";
    Layout = "~/Views/_Layout.cshtml";

    DutyEnum duty = ViewBag.DutyId;
}

<h2>@ViewBag.Title</h2>

<br />
<div class="form-horizontal">
    <div class="form-group">
        <div class="col-md-12">
            <label>災害日期：@(Model.FirstOrDefault() != null ? ((DateTime)Model.FirstOrDefault().ReportDay).ToString("yyyy/MM/dd") : "")</label>
            <br />
            <label>縣市：@Model.FirstOrDefault().CityName</label>
        </div>
    </div>
</div>

<p>
    <a href="#" onclick="history.go(-1)" class="btn btn-success">返回上一頁</a>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            通報鄉鎮
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsDamage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DamagePlace)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DumpSiteDesc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IncinerationPlantDesc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Other)
        </th>
        <th>圖片</th>
        <th>檔案下載</th>
        <th>
            處理情形
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Note)
        </th>
        <th>
            通報資料更新日期
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @{
                    if (item.Status == MyEPA.Enums.DamageStatusEnum.Waiting)
                    {
                        <span>已通報</span>
                    }
                    else if (item.Status == MyEPA.Enums.DamageStatusEnum.Confirm)
                    {
                        <span>已確認</span>
                        <br />
                        <span>
                            @(item.ConfirmTime != null ? ((DateTime)item.ConfirmTime).ToString("yyyy/MM/dd") : "")
                        </span>
                    }
                    else
                    {
                        <span style="color:red">@item.Status.GetDescription()</span>
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TownName)
            </td>
            <td>
                @(item.IsDamage.HasValue ? item.IsDamage.Value ? "有災害" : "無災害" : string.Empty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DamagePlace)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DumpSiteDesc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IncinerationPlantDesc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Other)
            </td>
            <td>
                @foreach (var img in item.Images)
                {
                    <div class="imgDiv">
                        <a href="@Url.Action("Download", "FileData",new {id = img.Id })" title="圖片" class="links">
                            <img alt="圖片" src="@Url.Action("Download","FileData",new {id = img.Id })" height="30" width="30">
                        </a>
                    </div>
                }
            </td>
            <td>
                @foreach (var img in item.Files)
                {
                    <div class="imgDiv">
                        @Html.ActionLink(img.UserFileName, "Download", "FileData", new { id = img.Id }, new { })
                    </div>
                }
            </td>
            <td>
                @if (duty == DutyEnum.Team)
                {
                    @Html.ActionLink(string.IsNullOrWhiteSpace(item.ProcessDesc) ? "未輸入" : "已輸入", "CorpsHandlingSituation", new { id = item.Id, type = "ALL", returnUrl = Request.Url.AbsoluteUri })
                }
            </td>
            <td>
                @Html.ActionLink(string.IsNullOrWhiteSpace(item.Note) ? "未輸入" : "已輸入", "Memo", new { id = item.Id, type = "ALL", returnUrl = Request.Url.AbsoluteUri })
            </td>
            <td>
                @(item.UpdateDate.HasValue ? item.UpdateDate.Value.ToString("yyyy/MM/dd HH:mm") : string.Empty)
            </td>
        </tr>
    }

</table>
