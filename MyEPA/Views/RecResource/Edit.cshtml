@model MyEPA.Models.RecResourceModel
@using MyEPA.Models

@{
    ViewBag.Title = "資源調度 - 修改";
    Layout = "~/Views/_Layout.cshtml";

    int type = ViewBag.Type;

    List<CityModel> Citys = ViewBag.Citys;
}
<link rel="stylesheet" href="~/Content/flatpickr.css">
<link rel="stylesheet" href="~/Content/confirmDate.css">

<h3>
    修改@(type == 1 ? "調度需求" : "提供資源")
</h3>

@using (Html.BeginForm("Edit", "RecResource", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @*@Html.AntiForgeryToken()*@

<div class="form-horizontal">
    <hr />
    @*<input type="hidden" name="ResourceTypeId" value="@Model.ResourceTypeId">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            <select id="CityId" name="CityId">
                @foreach (var item in Citys)
                {
                    <option value="@item.Id" @(Model.CityId == item.Id ? "selected" : string.Empty)>@item.City</option>
                }
            </select>
            @*@Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ContactMobilePhone, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.ContactMobilePhone, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.Items, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                <select id="Items" name="Items">
                    @foreach (var item in Code.GetRecItems())
                    {
                        <option value="@item.Key" @(Model.Items == item.Key ? "selected" : string.Empty)>@item.Value</option>
                    }
                </select>
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.TypeItems, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            <select id="TypeItems" name="TypeItems" onchange="ChangeTypeItems(this)">
                @foreach (var item in Code.GetRecTypeItems())
                {
                    <option value="@item.Key" @(Model.TypeItems == item.Key ? "selected" : string.Empty)>@item.Value</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Items, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            <select id="Items" name="Items">
            </select>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Spec, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Spec, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @{
            string lblUSDate = "";
            if (type == 1)
            { lblUSDate = "需用期間(起)"; }
            else if (type == 2)
            { lblUSDate = "提供期間(起)"; }
        }

        <label class="control-label col-md-1" for="">
            <span class="text-danger">*</span>
            @lblUSDate
        </label>
        <div class="col-md-6">
            @Html.TextBox("USDate", Model.USDate.ToString("yyyy-MM-dd"), new { @type = "Date", required = "required" })
        </div>
    </div>
    <div class="form-group">
        @{
            string lblUEDate = "";
            if (type == 1)
            { lblUEDate = "需用期間(迄)"; }
            else if (type == 2)
            { lblUEDate = "提供期間(迄)"; }
        }
        <label class="control-label col-md-1" for="">
            <span class="text-danger">*</span>
            @lblUEDate
        </label>

        <div class="col-md-6">
            @Html.TextBox("UEDate", Model.UEDate.ToString("yyyy-MM-dd"), new { @type = "Date", required = "required" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GatherDate, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.GatherDate, new { htmlAttributes = new { @type = "datetime-local" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GatherPlace, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.GatherPlace, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CheckPerson, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.CheckPerson, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CheckMobilePhone, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.CheckMobilePhone, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.COPerson, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.COPerson, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.COMobilePhone, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.COMobilePhone, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GoDate, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.GoDate, new { htmlAttributes = new { @type = "datetime-local" } })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-6">
            <input type="submit" value="修改" class="btn btn-success" />
            <a href="@Url.Action("Index")?type=@type&diasterId=@Model.DiasterId">
                <div class="btn align-center">取消</div>
            </a>
        </div>
    </div>
</div>
}

@section scripts{
    <script src="~/Scripts/confirmDate.js"></script>
    <script src="~/Scripts/flatpickr.js"></script>

    <script>
    $(document).ready(function () {
        ChangeTypeItems($("#TypeItems"));

        var items = '@Model.Items';
        $("#Items").val(items);
    });

    function ChangeTypeItems(target) {
        $("#Items").empty();
        //$("#Items").append('<option value title="">選擇項目</option>');
        var typeItems = $(target).val();

        $.ajax({
            type: "Get",
            url: '@Url.Action("GetRecTypeItems", "Codes")',
            data: { typeItems: typeItems },
            async: false,        
            success: function (result) {
                if (result.success) {
                    if (result.items.length != 0) {
                        $.each(result.items, function (index, v) {
                            $("#Items").append('<option value=' + v.Type + '>' + v.Name + '</option>');
                        });
                    }
                }
                else {
                    alert(result.errorMessage);
                }

            },
            error: function (xhr, status) {
                alert('更新失敗');
           }
        });
    }
    </script>

}